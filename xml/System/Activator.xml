<Type Name="Activator" FullName="System.Activator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e7f21bdc097b8dd3a620569d7381c3a7d38878d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56403724" /></Metadata><TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="94156-101">개체의 형식을 로컬 또는 원격으로 만들거나 기존 원격 개체에 대한 참조를 얻는 메서드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="94156-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-103"><xref:System.Activator.CreateInstance%2A> 메서드 지정 된 인수를 가장 일치 하는 생성자를 호출 하 여 어셈블리에 정의 된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="94156-104">지정 된 인수가 없는 경우 매개 변수, 즉, 기본 생성자를 사용 하는 생성자가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="94156-105">검색할; 생성자를 호출 하는 권한이 있어야 합니다. 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="94156-106">기본적으로 공용 생성자만 생성자를 검색 하는 동안 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="94156-107">없는 생성자 또는 기본 생성자를 찾을 수 있는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="94156-108">바인더 매개 변수를 적합 한 생성자에 대 한 어셈블리를 검색 하는 개체를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="94156-109">사용자 고유의 바인더 및 검색 조건을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="94156-110">지정 된 바인더가 기본 바인더가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="94156-111">자세한 내용은 <xref:System.Reflection.Binder?displayProperty=nameWithType> 및 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="94156-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="94156-112">증명 매개 변수를 생성자에 대 한 권한과 보안 정책에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="94156-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="94156-113">자세한 내용은 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="94156-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="94156-114">로컬 또는 원격 사이트에서 형식의 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="94156-115">유형을 원격으로 만든 경우 활성화 특성 매개 변수를 원격 사이트의 URI를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="94156-116">원격 사이트에 도달 하기 전에 인스턴스 만들기에 대 한 호출 중간 사이트를 통해 전달 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="94156-117">다른 활성화 특성 환경 또는 호출 원격 및 중간 사이트에서 작동 하는 컨텍스트를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="94156-118">인스턴스에 로컬로 만들어진 경우 해당 개체에 대 한 참조가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="94156-119">인스턴스를 원격으로 만든 경우 프록시에 대 한 참조가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="94156-120">원격 개체는 로컬 개체인 것 처럼 프록시를 통해 조작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="94156-121"><xref:System.Activator.GetObject%2A> 메서드는 현재 실행 중인 원격 개체, 서버가 활성화 한 잘 알려진 개체, 또는 XML 웹 서비스 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="94156-122">연결 매체, 즉, 채널을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="94156-123">자세한 내용은 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="94156-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="94156-124">어셈블리에 형식 정의가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="94156-125"><xref:System.Activator.CreateInstance%2A> 메서드는 현재 실행 중인 어셈블리에서 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="94156-126"><xref:System.Activator.CreateInstanceFrom%2A> 메서드는 어셈블리를 포함 하는 파일에서 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="94156-127"><xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 어셈블리를 포함 하는 파일에서 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94156-128">다음 예제에서는 사용 하는 방법의 <xref:System.Activator> 런타임에 동적으로 개체를 생성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94156-129">이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-130">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-130">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-131">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-131">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="94156-132">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-133">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-134">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-135"><xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 특성의 값을 사용 하 여 `true` COM 형식으로 명시적으로 나 기본적으로 적용할 해야 하므로 <xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 해당 형식의 인스턴스를 만들 수이 고, 그렇지 않으면 <xref:System.TypeLoadException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="94156-136">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-137">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식을 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-138">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-139">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-140"><paramref name="typeName" /> 또는 <paramref name="assemblyName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-141">COM을 통해 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-141">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="94156-142">또는</span><span class="sxs-lookup"><span data-stu-id="94156-142">-or-</span></span> 
 <span data-ttu-id="94156-143"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-144">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-145"><paramref name="assemblyName" />이 없거나 로드하려는 모듈이 파일 이름 확장명을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-146">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-146">Cannot create an instance of an abstract class.</span></span>  
  
<span data-ttu-id="94156-147">또는</span><span class="sxs-lookup"><span data-stu-id="94156-147">-or-</span></span> 
<span data-ttu-id="94156-148">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-149">호출자가 <see cref="T:System.MarshalByRefObject" />에서 상속되지 않는 개체에 대한 활성화 특성을 제공할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-150"><paramref name="assemblyName" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-151">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-151">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-152">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-153">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-153">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-154">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-154">The name of the preferred type.</span></span></param>
        <param name="hashValue"><span data-ttu-id="94156-155">계산된 해시 코드의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="94156-156">파일을 해시하고 강력한 이름을 생성하는 데 사용되는 해시 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-156">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="94156-157">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-158">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-158">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-159">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-160"><xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 특성의 값을 사용 하 여 `true` COM 형식으로 명시적으로 나 기본적으로 적용할 해야 하므로 <xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 해당 형식의 인스턴스를 만들 수이 고, 그렇지 않으면 <xref:System.TypeLoadException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="94156-161">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-162">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식을 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-163">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-164">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-165"><paramref name="typeName" /> 또는 <paramref name="assemblyName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-165"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-166"><paramref name="assemblyName" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-166"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="94156-167">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-167">An assembly or module was loaded twice with two different evidences.</span></span>
        
<span data-ttu-id="94156-168">또는</span><span class="sxs-lookup"><span data-stu-id="94156-168">-or-</span></span> 
 <span data-ttu-id="94156-169"><paramref name="assemblyName" />이 시스템 정의 최대 길이보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="94156-169"><paramref name="assemblyName" /> is longer than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-170"><paramref name="assemblyName" />이 없거나 로드하려는 모듈이 파일 이름 확장명을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-170"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-171"><paramref name="assemblyName" />을 찾았지만 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-171"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-172"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-172"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-173">"file://"로 시작하지 않는 코드베이스가 필수 <see langword="WebPermission" /> 없이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="94156-173">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-174">COM을 통해 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-174">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="94156-175">또는</span><span class="sxs-lookup"><span data-stu-id="94156-175">-or-</span></span> 
 <span data-ttu-id="94156-176"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-176"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-177">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-177">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-178">추상 클래스의 인스턴스를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-178">An instance of an abstract class cannot be created.</span></span>  
  
<span data-ttu-id="94156-179">또는</span><span class="sxs-lookup"><span data-stu-id="94156-179">-or-</span></span> 
<span data-ttu-id="94156-180">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-180">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-181">호출자가 <see cref="T:System.MarshalByRefObject" />에서 상속되지 않는 개체에 대한 활성화 특성을 제공할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-181">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-182">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-182">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-183">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-184">"file://"로 시작 하는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-184">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="94156-185">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-185">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="94156-186">"file://"로 시작 하지 않는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-186">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94156-187">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-187">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="94156-188">만들 개체를 지정하는 활성화 컨텍스트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-188">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="94156-189">지정된 <see cref="T:System.ActivationContext" /> 개체에서 지정하는 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-189">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="94156-190">새로 만든 개체에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-190">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-191">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-191">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-192">도메인 정책을 설정 하 고 애플리케이션 기반 보안 모델을 제공 된 활성화 컨텍스트 매니페스트 기반 활성화 동안 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-192">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="94156-193"><xref:System.ActivationContext> 클래스를 포함 한 <xref:System.ApplicationIdentity> 애플리케이션 매니페스트에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-193">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="94156-194">자세한 내용은 <xref:System.Security.Policy.ApplicationSecurityManager> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="94156-194">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-195">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-195">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="94156-196">해당 형식의 기본 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-196">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-197">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-197">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-198">호출할 생성자는 액세스할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-198">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-199">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여를 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-199">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-200">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-200">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-201">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-201">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94156-202">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Activator.CreateInstance%28System.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-202">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="94156-203">여러 다른 형식의 인스턴스를 만들고 기본값으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-203">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-204"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-204"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-205"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-205"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-206">또는</span><span class="sxs-lookup"><span data-stu-id="94156-206">-or-</span></span> 
 <span data-ttu-id="94156-207"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-207"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-208"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-208"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-209">또는</span><span class="sxs-lookup"><span data-stu-id="94156-209">-or-</span></span> 
<span data-ttu-id="94156-210"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-210">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-211">또는</span><span class="sxs-lookup"><span data-stu-id="94156-211">-or-</span></span> 
<span data-ttu-id="94156-212"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-212">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-213">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-213">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="94156-214"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.MemberAccessException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-214">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="94156-215">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-215">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-216">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-216">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-217"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-217">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="94156-218"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-218">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="94156-219">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-219">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-220"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-220"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-221"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-221"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-222">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-222">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-223">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-224">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-224">for accessing nonpublic types regardless of their grant sets.</span></span> <span data-ttu-id="94156-225">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-225">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="94156-226">만들 개체를 지정하는 활성화 컨텍스트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-226">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="94156-227">사용자 지정 활성화 데이터가 포함된 유니코드 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-227">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="94156-228">지정된 사용자 지정 활성화 데이터로 활성화되며 지정된 <see cref="T:System.ActivationContext" /> 개체에서 지정하는 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-228">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="94156-229">새로 만든 개체에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-229">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-230">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-230">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-231">도메인 정책을 설정 하 고 애플리케이션 기반 보안 모델을 제공 된 활성화 컨텍스트 매니페스트 기반 활성화 동안 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-231">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="94156-232"><xref:System.ActivationContext> 클래스를 포함 한 <xref:System.ApplicationIdentity> 애플리케이션 매니페스트에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-232">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="94156-233">자세한 내용은 <xref:System.Security.Policy.ApplicationSecurityManager> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="94156-233">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-234"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-234">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-235"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-235">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-236">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-236">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="94156-237">명명된 어셈블리 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-237">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-238">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-238">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-239">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-239">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-240">`assemblyName` 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-240">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="94156-241">해당 경로 또는 파일 확장명이 없는 어셈블리의 단순한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-241">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="94156-242">예를 들어 지정 `TypeExtensions` 해당 경로 및 이름을.\bin\TypeExtensions.dll 하 게 하는 어셈블리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-242">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="94156-243">단순한 이름, 버전, 문화권 및 공개 키 토큰; 구성 된 서명된 된 어셈블리의 전체 이름 예를 들어, "TypeExtensions, 버전 1.0.0.0, Culture = neutral, PublicKeyToken = 181869f2f7435b51 ="입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-243">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="94156-244">공용 언어 런타임을 식별 하 고 어셈블리를 로드 하는 방법에 대 한 자세한 내용은 참조 하세요. [런타임 어셈블리를 찾는 방법](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-244">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="94156-245">애플리케이션 구성 파일을 사용 하 여 어셈블리 위치를 정의 하는 내용은 [어셈블리의 위치 지정](~/docs/framework/configure-apps/specify-assembly-location.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-245">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="94156-246">경우 `assemblyName` 발견 되 면 기본 컨텍스트에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-246">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-247">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식을 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-247">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-248">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-248">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-249">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-249">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94156-250">다음 예제에서는 라는 클래스를 정의 `Person` 라는 어셈블리에 `PersonInfo`입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-250">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="94156-251">`Person` 클래스에 두 명의 생성자가 그 중 하나는 매개 변수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-251">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="94156-252">다음 예제에서는 합니다 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 인스턴스화하기 위한 메서드를 `Person` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-252">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="94156-253">프로젝트에 추가할 PersonInfo.dll에 대 한 참조가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-253">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="94156-254">때문에 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 메서드 호출을 `Person` 예제에서는 클래스 기본 생성자에 값을 할당 해당 `Name` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-254">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="94156-255">그러나 <xref:System.Activator.CreateInstance%2A> 컴퓨터 경계를 넘나들는 또는 디자인 타임에 알려지지 않은 형식을 인스턴스화할 자주 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-255">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="94156-256">이 경우 프로젝트의 어셈블리에 대 한 참조를 포함할 수 없습니다 하 고 형식의 멤버에 대 한 초기 바인딩 호출을 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-256">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="94156-257">이 제한을 해결 하려면 다음 예제에서는 <xref:System.Activator.CreateInstance%2A> 값을 할당 하기 위해 리플렉션 함께 메서드를 `Person` 개체의 `Name` 속성 및 해당 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-257">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-258"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-258"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-259">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-259">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-260"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-260"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-261"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-261"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-262">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-262">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-263">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-263">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-264">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-264">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-265"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-265">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-266"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-266">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-267"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-267"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-268">또는</span><span class="sxs-lookup"><span data-stu-id="94156-268">-or-</span></span> 
<span data-ttu-id="94156-269">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-269">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-270">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-270">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-271">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-271">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-272">또는</span><span class="sxs-lookup"><span data-stu-id="94156-272">-or-</span></span> 
<span data-ttu-id="94156-273">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-273">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-274">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-274">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-275">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-276">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-276">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-277">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-277">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-278">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-278">The type of object to create.</span></span></param>
        <param name="nonPublic"><span data-ttu-id="94156-279">public 또는 public이 아닌 기본 생성자가 일치할 수 있으면 <see langword="true" />이고, public 기본 생성자만 일치할 수 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-279"><see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span></span></param>
        <summary><span data-ttu-id="94156-280">해당 형식의 기본 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-280">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-281">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-281">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="94156-282">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합은 제한 된 경우 호출자의 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-282">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-283">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-283">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-284">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-284">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-285"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-285"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-286"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-286"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-287">또는</span><span class="sxs-lookup"><span data-stu-id="94156-287">-or-</span></span> 
 <span data-ttu-id="94156-288"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-288"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-289"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-289"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-290">또는</span><span class="sxs-lookup"><span data-stu-id="94156-290">-or-</span></span> 
<span data-ttu-id="94156-291"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-291">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-292">또는</span><span class="sxs-lookup"><span data-stu-id="94156-292">-or-</span></span> 
<span data-ttu-id="94156-293"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-293">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-294">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-294">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-295">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-295">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-296">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-296">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-297"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-297">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-298">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-298">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-299"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-299"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-300"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-300"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-301">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-301">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-302">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-303">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-303">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-304">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-304">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-305">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-305">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="94156-306">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-306">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-307"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-307">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="94156-308">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-308">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-309">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-309">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-310">호출할 생성자에 액세스할 수 있어야 하 고 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-310">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-311">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여를 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-311">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-312">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-312">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-313">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-313">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94156-314">다음 예제에서는 합니다 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 메서드를 한 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-314">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="94156-315">호출 된 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 14 번째 위치에서 시작 하는 문자 배열에서 10 개 요소가 포함 된 문자열을 인스턴스화하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-315">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="94156-316">다음 예제에서는 가변된 배열의 요소가 들어 있는에 전달할 인수를 <xref:System.String> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-316">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="94156-317">그런 다음 각 배열에 전달 된 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 적절 한 문자열 생성자를 호출 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="94156-317">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-318"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-318"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-319"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-319"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-320">또는</span><span class="sxs-lookup"><span data-stu-id="94156-320">-or-</span></span> 
 <span data-ttu-id="94156-321"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-321"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-322"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-322"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-323">또는</span><span class="sxs-lookup"><span data-stu-id="94156-323">-or-</span></span> 
<span data-ttu-id="94156-324"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-324">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-325">또는</span><span class="sxs-lookup"><span data-stu-id="94156-325">-or-</span></span> 
<span data-ttu-id="94156-326"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-326">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="94156-327">또는</span><span class="sxs-lookup"><span data-stu-id="94156-327">-or-</span></span> 
<span data-ttu-id="94156-328"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-328">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-329">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-329">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="94156-330"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.MemberAccessException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-330">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="94156-331">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-331">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-332">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-332">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-333"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-333">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="94156-334"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-334">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="94156-335">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-335">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-336"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-336"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-337"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-337"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-338">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-338">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-339">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-339">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-340">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-340">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-341">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-341">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-342"><paramref name="typeName" />이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-342">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="94156-343"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-343">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-344"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-344">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-345">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-345">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="94156-346">명명된 어셈블리 및 기본 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-346">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-347">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-347">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-348">사용 하 여 <xref:System.Activator.CreateInstance%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-348">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-349">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-349">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-350">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 직접 실행 하려면 호출자가 완전 신뢰 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-350">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-351"><paramref name="typeName" /> 또는 <paramref name="domain" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-351"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-352">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-352">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-353"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-353"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-354"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-354"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-355">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-355">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-356">추상 형식의 인스턴스를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-356">Cannot create an instance of an abstract type.</span></span>  
  
<span data-ttu-id="94156-357">또는</span><span class="sxs-lookup"><span data-stu-id="94156-357">-or-</span></span> 
<span data-ttu-id="94156-358">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-358">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-359">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-359">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-360"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-360">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-361"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-361">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-362"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-362"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-363">또는</span><span class="sxs-lookup"><span data-stu-id="94156-363">-or-</span></span> 
<span data-ttu-id="94156-364">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-364">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-365">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-365">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-366">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-366">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-367">또는</span><span class="sxs-lookup"><span data-stu-id="94156-367">-or-</span></span> 
<span data-ttu-id="94156-368">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-368">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-369">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-369">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-370">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-370">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-371">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-371">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="94156-372">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-372">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-373">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-373">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-374">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-374">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-375"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-375">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-376"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-376">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-377">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-377">The fully qualified name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-378">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-378">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-379">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-379">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-380">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-380">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-381">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-381">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-382">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-382">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-383">명명된 어셈블리 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-383">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-384">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-384">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-385">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-385">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-386">부터 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식을 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식의 권한 부여 집합 인지 해당 하위 집합 또는 호출자의 권한 부여 집합으로 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-386">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-387">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-387">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-388">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-388">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-389"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-389"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-390">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-390">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-391"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-391"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-392"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-392"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-393">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-393">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-394">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-394">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-395"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-395">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-396"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-396">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-397">또는</span><span class="sxs-lookup"><span data-stu-id="94156-397">-or-</span></span> 
 <span data-ttu-id="94156-398"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-398"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-399">또는</span><span class="sxs-lookup"><span data-stu-id="94156-399">-or-</span></span> 
 <span data-ttu-id="94156-400"><paramref name="activationAttributes" />가 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span><span class="sxs-lookup"><span data-stu-id="94156-400"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
<span data-ttu-id="94156-401">배열이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-401">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-402"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-402"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-403">또는</span><span class="sxs-lookup"><span data-stu-id="94156-403">-or-</span></span> 
<span data-ttu-id="94156-404">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-404">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-405">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-405">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-406">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-406">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-407">또는</span><span class="sxs-lookup"><span data-stu-id="94156-407">-or-</span></span> 
<span data-ttu-id="94156-408">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-408">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-409"><paramref name="activationAttributes" />에 지정된 대상에서 원격 활성화를 시도할 때 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="94156-409">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-410">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-410">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-411">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-411">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-412">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-412">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-413">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-413">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-414">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-414">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="94156-415">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-415">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-416"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-416">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-417">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-417">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-418">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-418">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-419">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-419">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-420">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-420">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-421">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-421">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-422">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-422">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-423">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-423">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-424">호출할 생성자에 액세스할 수 있어야 하 고 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-424">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-425">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]를 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여를 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-425">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-426">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-426">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-427">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-427">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-428"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-428"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-429"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-429"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-430">또는</span><span class="sxs-lookup"><span data-stu-id="94156-430">-or-</span></span> 
 <span data-ttu-id="94156-431"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-431"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-432"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-432"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-433">또는</span><span class="sxs-lookup"><span data-stu-id="94156-433">-or-</span></span> 
<span data-ttu-id="94156-434"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-434">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-435">또는</span><span class="sxs-lookup"><span data-stu-id="94156-435">-or-</span></span> 
 <span data-ttu-id="94156-436"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-436"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-437">또는</span><span class="sxs-lookup"><span data-stu-id="94156-437">-or-</span></span> 
<span data-ttu-id="94156-438"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-438">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="94156-439">또는</span><span class="sxs-lookup"><span data-stu-id="94156-439">-or-</span></span> 
<span data-ttu-id="94156-440"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-440">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-441">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-441">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-442">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-442">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-443">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-443">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-444"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-444">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-445">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-445">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-446"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-446"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-447"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-447"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-448">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-448">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-449">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-450">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-450">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-451">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-451">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-452">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-452">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-453"><paramref name="type" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-453">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-454"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-454">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-455"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="type" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-455">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-456"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-456">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-457">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-457">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-458"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-458">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-459"><paramref name="type" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-459">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-460"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-460">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="94156-461">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-461">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-462">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-462">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-463">호출할 생성자는 지정 된 바인더와 바인딩 특성의 제약 조건에 따라 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-463">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-464">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합은 제한 된 경우 호출자의 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-464">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-465">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-465">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-466">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-466">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-467"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-467"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-468"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-468"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-469">또는</span><span class="sxs-lookup"><span data-stu-id="94156-469">-or-</span></span> 
 <span data-ttu-id="94156-470"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-470"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-471"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-471"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-472">또는</span><span class="sxs-lookup"><span data-stu-id="94156-472">-or-</span></span> 
<span data-ttu-id="94156-473"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-473">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-474">또는</span><span class="sxs-lookup"><span data-stu-id="94156-474">-or-</span></span> 
<span data-ttu-id="94156-475"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-475">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="94156-476">또는</span><span class="sxs-lookup"><span data-stu-id="94156-476">-or-</span></span> 
<span data-ttu-id="94156-477"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-477">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-478">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-478">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-479">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-479">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-480">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-480">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-481"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-481">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-482">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-482">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-483"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-483"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-484"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-484"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-485">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-485">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-486">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-486">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-487">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-487">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-488">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-488">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-489">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-489">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-490"><paramref name="type" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-490">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-491"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-491">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-492"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="type" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-492">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-493"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-493">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-494">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-494">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-495"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-495">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-496"><paramref name="type" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-496">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="94156-497"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-497">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-498">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-498">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-499">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-499">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-500">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-500">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-501">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-501">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-502">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-502">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-503">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-503">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-504">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-504">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-505">호출할 생성자는 지정 된 바인더와 바인딩 특성의 제약 조건에 따라 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-505">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-506">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버에 액세스 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 집합을 부여할 플래그 및 public이 아닌 형식 및 멤버의 권한 부여 집합은 호출자로 제한 됩니다 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-506">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-507">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-507">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-508">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-508">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-509"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-509"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94156-510"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="94156-510"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="94156-511">또는</span><span class="sxs-lookup"><span data-stu-id="94156-511">-or-</span></span> 
 <span data-ttu-id="94156-512"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-512"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-513"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-513"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="94156-514">또는</span><span class="sxs-lookup"><span data-stu-id="94156-514">-or-</span></span> 
<span data-ttu-id="94156-515"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-515">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-516">또는</span><span class="sxs-lookup"><span data-stu-id="94156-516">-or-</span></span> 
 <span data-ttu-id="94156-517"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-517"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-518">또는</span><span class="sxs-lookup"><span data-stu-id="94156-518">-or-</span></span> 
<span data-ttu-id="94156-519"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-519">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="94156-520">또는</span><span class="sxs-lookup"><span data-stu-id="94156-520">-or-</span></span> 
<span data-ttu-id="94156-521"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-521">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-522">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-522">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-523">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-523">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-524">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-524">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-525"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-525">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-526">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-526">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="94156-527"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-527"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-528"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-528"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-529">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-529">for supplying evidence.</span></span> <span data-ttu-id="94156-530">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="94156-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-531">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-531">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-532">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-533"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-533">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-534"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-534">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-535">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-535">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-536"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-536"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-537"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-537">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-538"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-538">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-539"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-539">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-540"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-540">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-541">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-541">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-542"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-542">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-543"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-543">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-544"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-544">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-545">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-545">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-546">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-546">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-547">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-547">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-548">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-548">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-549">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-549">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-550">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-550">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-551">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-551">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-552">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-552">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-553">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버를 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합은 제한 된 경우 호출자의 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-553">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-554">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-554">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-555">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-555">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-556"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-556"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-557">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-557">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-558"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-558"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-559"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-559"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-560">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-560">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-561">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-562">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-562">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-563"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-564"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-565">또는</span><span class="sxs-lookup"><span data-stu-id="94156-565">-or-</span></span> 
 <span data-ttu-id="94156-566"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-566"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-567">또는</span><span class="sxs-lookup"><span data-stu-id="94156-567">-or-</span></span> 
<span data-ttu-id="94156-568"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-568">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-569"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-569"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-570">또는</span><span class="sxs-lookup"><span data-stu-id="94156-570">-or-</span></span> 
<span data-ttu-id="94156-571">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-571">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-572">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-572">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-573">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-573">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-574">또는</span><span class="sxs-lookup"><span data-stu-id="94156-574">-or-</span></span> 
<span data-ttu-id="94156-575">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-575">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-576">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-576">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-577">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-577">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-578">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-578">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-579">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-579">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-580"><paramref name="typeName" />이라는 형식이 만들어지는 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-580">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="94156-581"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-581">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-582"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-582">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-583">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-583">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-584"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-584"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-585"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-585">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-586"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-586">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-587"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-587">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-588"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-588">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-589">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-589">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-590"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-590">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-591"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-591">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-592"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-592">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-593">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-593">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-594">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-594">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-595">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-595">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-596">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-596">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-597">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-597">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-598">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-598">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-599">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-599">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-600">사용 하 여 <xref:System.Activator.CreateInstance%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-600">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-601">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-601">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-602">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 직접 실행 하려면 호출자가 완전 신뢰 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-602">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-603"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-603"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-604">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-604">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-605"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-605"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-606"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-606"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-607">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-607">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-608">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-608">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-609">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-609">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-610"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-610">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-611"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-611">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-612">또는</span><span class="sxs-lookup"><span data-stu-id="94156-612">-or-</span></span> 
 <span data-ttu-id="94156-613"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-613"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-614">또는</span><span class="sxs-lookup"><span data-stu-id="94156-614">-or-</span></span> 
<span data-ttu-id="94156-615"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-615">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-616"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-616"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-617">또는</span><span class="sxs-lookup"><span data-stu-id="94156-617">-or-</span></span> 
<span data-ttu-id="94156-618">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-618">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-619">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-619">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-620">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-620">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-621">또는</span><span class="sxs-lookup"><span data-stu-id="94156-621">-or-</span></span> 
<span data-ttu-id="94156-622">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-622">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-623">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-623">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-624">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-624">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-625">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-625">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-626">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-626">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-627">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-627">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="94156-628">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-628">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="94156-629"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-629">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-630"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-630">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-631">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-631">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-632"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-632"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-633"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-633">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-634"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-634">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-635"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-635">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-636"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-636">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-637">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-637">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-638"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-638">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-639"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-639">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-640"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-640">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-641">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-641">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-642">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-642">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-643">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-643">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-644">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-644">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-645">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-645">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="94156-646">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-646">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="94156-647">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-647">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-648">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-648">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-649">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-649">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-650">로 시작 합니다 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버를 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 사용 하 여는 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합은 제한 된 경우 호출자의 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-650">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="94156-651">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="94156-651">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="94156-652">이 기능을 사용하려면 애플리케이션이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-652">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-653"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-653"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-654">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-654">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-655"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-655"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-656"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-656"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-657">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-657">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-658">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-658">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-659">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-659">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-660"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-660">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-661"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-661">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-662">또는</span><span class="sxs-lookup"><span data-stu-id="94156-662">-or-</span></span> 
 <span data-ttu-id="94156-663"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-663"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-664">또는</span><span class="sxs-lookup"><span data-stu-id="94156-664">-or-</span></span> 
<span data-ttu-id="94156-665"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-665">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-666"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-666"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-667">또는</span><span class="sxs-lookup"><span data-stu-id="94156-667">-or-</span></span> 
<span data-ttu-id="94156-668">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-668">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-669">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-669">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-670">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-670">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-671">또는</span><span class="sxs-lookup"><span data-stu-id="94156-671">-or-</span></span> 
<span data-ttu-id="94156-672">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-672">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-673">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-673">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-674">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-674">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-675">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-675">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-676">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-676">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-677"><paramref name="typeName" />이라는 형식이 만들어지는 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-677">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="94156-678"><paramref name="typeName" />이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-678">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="94156-679"><paramref name="assemblyName" />이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-679">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-680">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-680">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-681"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-681"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-682"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-682">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-683"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-683">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-684"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-684">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-685"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-685">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-686">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-686">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-687"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-687">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-688"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-688">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-689"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-689">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-690">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-690">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-691">일반적으로 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-691">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="94156-692"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />는 원격 개체를 활성화하는 데 필요한 URL을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-692">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="94156-693">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-693">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="94156-694">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-694">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-695">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-695">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-696">사용 하 여 <xref:System.Activator.CreateInstance%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-696">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-697">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값을 래핑 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-697">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-698">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 직접 실행 하려면 호출자가 완전 신뢰 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-698">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-699"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-699"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-700">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-700">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-701"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-701"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-702"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-702"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-703">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-703">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-704">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-704">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-705">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-705">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="94156-706"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-706">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-707"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-707">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="94156-708">또는</span><span class="sxs-lookup"><span data-stu-id="94156-708">-or-</span></span> 
 <span data-ttu-id="94156-709"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-709"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="94156-710">또는</span><span class="sxs-lookup"><span data-stu-id="94156-710">-or-</span></span> 
<span data-ttu-id="94156-711"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-711">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-712"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-712"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-713">또는</span><span class="sxs-lookup"><span data-stu-id="94156-713">-or-</span></span> 
<span data-ttu-id="94156-714">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-714">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-715">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-715">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="94156-716">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-716">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="94156-717">또는</span><span class="sxs-lookup"><span data-stu-id="94156-717">-or-</span></span> 
<span data-ttu-id="94156-718">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-718">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-719">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-719">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-720">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-720">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-721">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-721">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="94156-722">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-722">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-723">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-723">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-724">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-724">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="94156-725">만들 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-725">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="94156-726">매개 변수가 없는 생성자를 사용하여 지정된 제네릭 형식 매개 변수로 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-726">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-727">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-727">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-728"><xref:System.Activator.CreateInstance%60%601> 제네릭 메서드의 형식 매개 변수로 지정 된 형식의 인스턴스화를 구현 하려면 컴파일러에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-728">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="94156-729">다음 제네릭 메서드를 구현에서 예를 들어 `new T()` (`gcnew T()` c + +에서) 사용 하는 <xref:System.Activator.CreateInstance%60%601> 제네릭 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-729">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="94156-730">일반적으로 사용 되지 않습니다는 <xref:System.Activator.CreateInstance%60%601> 애플리케이션에서 제네릭 메서드 코드를 하므로 컴파일 타임에 형식을 알 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-730">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="94156-731">일반 인스턴스화로 구문은 사용할 수 있으며 컴파일 타임에 형식을 알 수 있으면 (`new` C# 연산자 `New` Visual basic에서는 `gcnew` c + +에서).</span><span class="sxs-lookup"><span data-stu-id="94156-731">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="94156-732">형식이 컴파일 타임에 알려지지 않은, 경우에의 비 제네릭 오버 로드를 호출할 수 있습니다 <xref:System.Activator.CreateInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-732">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="94156-733">오버 로드가 없는 합니다 <xref:System.Activator.CreateInstance%60%601> 제네릭이 아닌 오버 로드 때문에 인수 목록을 사용 하는 제네릭 메서드 <xref:System.Activator.CreateInstance%2A> 이미 바인딩된 생성자 확인을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-733">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="94156-734"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-734">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="94156-735"><paramref name="T" />에 지정된 형식에 매개 변수가 없는 생성자가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-735">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94156-736">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-736">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="94156-737">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-737">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-738">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-738">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="94156-739">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-739">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-740">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-740">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-741">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-741">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-742">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-742">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94156-743">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Activator.CreateInstanceFrom%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-743">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="94156-744">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Activator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-744">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-745"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-745"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-746">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-746">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-747"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-747"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-748"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-748"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-749">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-749">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-750">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-750">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-751">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-751">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-752">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-752">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-753"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-753"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-754">또는</span><span class="sxs-lookup"><span data-stu-id="94156-754">-or-</span></span> 
<span data-ttu-id="94156-755">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-755">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-756">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-756">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-757">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-757">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-758">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-758">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-759">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-759">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-760">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-760">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-761">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-761">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-762">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-762">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-763"><paramref name="typeName" />이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-763">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="94156-764">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-764">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-765">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-765">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="94156-766">명명된 어셈블리 파일 및 기본 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-766">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-767">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-767">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-768">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-768">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-769">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-769">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-770">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 직접 실행 하려면 호출자가 완전 신뢰 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-770">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="94156-771">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-771">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-772"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-772"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-773">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-773">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-774"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-774"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-775"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-775"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-776">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-776">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-777">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-777">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-778">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-778">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-779">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-779">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-780"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-780"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-781">또는</span><span class="sxs-lookup"><span data-stu-id="94156-781">-or-</span></span> 
<span data-ttu-id="94156-782">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-782">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-783">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-783">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-784">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-784">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-785">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-785">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-786">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-786">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-787">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-787">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-788">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-788">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-789">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-789">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="94156-790">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-790">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-791">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-791">The name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-792">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-792">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-793">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-793">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-794">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-794">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-795">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-795">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-796">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-796">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-797">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-797">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="94156-798">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-798">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-799">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-799">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-800">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-800">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-801"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-801"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-802">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-802">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-803"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-803"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-804"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-804"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-805">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-805">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-806">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-806">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-807">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-807">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-808"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-808"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-809">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-809">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-810"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-810"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-811">또는</span><span class="sxs-lookup"><span data-stu-id="94156-811">-or-</span></span> 
<span data-ttu-id="94156-812">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-812">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-813">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-813">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-814">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-814">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-815">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-815">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-816">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-816">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-817">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-817">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-818">public이 아닌 형식에 관계 없이 해당 권한 부여 집합에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-818">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="94156-819">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-819">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="94156-820">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-820">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-821">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-821">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-822"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-822"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-823"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-823">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-824"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-824">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-825"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-825">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-826"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-826">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-827">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-827">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-828"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-828">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-829"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-829">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-830"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-830">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-831">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-831">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-832">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-832">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-833">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-833">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-834">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-834">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-835">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-835">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-836">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-836">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-837">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-837">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-838">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-838">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-839">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-839">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-840"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-840"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-841">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-841">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-842"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-842"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-843"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-843"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-844">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-844">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-845">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-845">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-846">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-846">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-847">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-847">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-848"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-848"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-849"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-849"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-850">또는</span><span class="sxs-lookup"><span data-stu-id="94156-850">-or-</span></span> 
<span data-ttu-id="94156-851">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-851">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-852">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-852">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-853">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-853">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-854">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-854">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-855">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-855">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-856">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-856">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-857">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-857">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-858">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-858">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-859"><paramref name="typeName" />이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-859">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="94156-860">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-860">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-861">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-861">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-862"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-862"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-863"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-863">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-864"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-864">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-865"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-865">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-866"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-866">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-867">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-867">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-868"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-868">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-869"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-869">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-870"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-870">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-871">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-871">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-872">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-872">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-873">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-873">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-874">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-874">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-875">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-875">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="94156-876">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-876">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-877">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-877">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-878">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-878">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-879">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-879">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-880">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-880">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-881"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-881"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-882">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-882">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-883"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-883"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-884"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-884"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-885">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-885">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-886">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-886">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-887">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-887">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-888">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-888">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-889"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-889"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-890"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-890"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-891">또는</span><span class="sxs-lookup"><span data-stu-id="94156-891">-or-</span></span> 
 <span data-ttu-id="94156-892">현재 로드 중인 버전 이후 버전의 공용 언어 런타임에 대해 <paramref name="assemblyName" />이 컴파일된 경우</span><span class="sxs-lookup"><span data-stu-id="94156-892"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-893">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-893">for supplying evidence.</span></span> <span data-ttu-id="94156-894">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="94156-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-895">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-895">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-896">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-896">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-897">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-897">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-898">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-898">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-899">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-899">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-900">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-900">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="94156-901">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-901">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-902">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-902">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-903"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-903"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-904"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-904">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-905"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-905">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-906"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-906">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-907"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-907">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-908">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-908">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-909"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-909">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-910"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-910">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-911"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-911">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-912">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-912">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-913">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-913">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-914">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-914">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-915">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-915">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-916">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-916">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="94156-917">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-917">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="94156-918">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-918">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-919">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-919">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-920">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-920">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="94156-921">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-921">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-922"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-922"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-923">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-923">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-924"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-924"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-925"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-925"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-926">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-926">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-927">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-927">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-928">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-928">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-929">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-929">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-930"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-930"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-931"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-931"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-932">또는</span><span class="sxs-lookup"><span data-stu-id="94156-932">-or-</span></span> 
<span data-ttu-id="94156-933">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-933">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-934">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-934">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-935">대리자의 인스턴스를 만들 때 관리 되지 않는 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-935">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="94156-936">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="94156-936">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-937">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-937">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-938">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-938">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-939">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-939">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-940">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-940">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="94156-941"><paramref name="typeName" />이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-941">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="94156-942">형식 <paramref name="typeName" />이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-942">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="94156-943">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-943">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="94156-944"><paramref name="typeName" />에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-944"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="94156-945"><paramref name="typeName" /> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-945">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-946"><paramref name="bindingAttr" />가 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-946">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="94156-947"><paramref name="bindingAttr" /> 및 <paramref name="args" />을(를) 사용하여 <paramref name="typeName" /> 생성자를 식별하고 검색하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-947">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-948"><paramref name="binder" />가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-948">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="94156-949">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-949">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="94156-950"><paramref name="args" />이(가) 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-950">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="94156-951"><paramref name="typeName" /> 생성자에 대해 선언된 공식적인 형식에 <paramref name="args" />를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-951">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="94156-952"><paramref name="culture" />가 <see langword="null" />이면 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-952">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="94156-953">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-953">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="94156-954">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-954">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="94156-955">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-955">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="94156-956">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-956">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="94156-957">분산된 애플리케이션은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-957">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="94156-958">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-958">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="94156-959">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-959">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="94156-960">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-960">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-961">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 호스트 제한 된 보안 권한을 가진 애플리케이션 도메인에서 코드를 실행 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="94156-961">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="94156-962">사용 된 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 반환 값의 래핑을 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-962">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94156-963">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 직접 실행 하려면 호출자가 완전 신뢰 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-963">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="94156-964">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하세요. 합니다 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 고 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-964">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-965"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-965"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="94156-966">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-966">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="94156-967"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-967"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94156-968"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-968"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="94156-969">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-969">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-970">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-970">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="94156-971">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="94156-971">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="94156-972">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="94156-972">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94156-973"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-973"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94156-974"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="94156-974"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="94156-975">또는</span><span class="sxs-lookup"><span data-stu-id="94156-975">-or-</span></span> 
<span data-ttu-id="94156-976">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-976">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="94156-977">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-977">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94156-978">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-978">for supplying evidence.</span></span> <span data-ttu-id="94156-979">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="94156-979">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="94156-980">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-980">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="94156-981">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="94156-981">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="94156-982">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-982">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="94156-983">연결 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="94156-983">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-984">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-984">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-985">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-985">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94156-986">잘 알려진 개체 또는 XML Web service를 위한 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-986">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-987">연결할 잘 알려진 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-987">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="94156-988">잘 알려진 개체의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-988">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="94156-989">지정된 형식 및 URL로 표시되는 잘 알려진 개체의 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-989">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="94156-990">요청된 잘 알려진 개체가 사용하는 엔드포인트를 가리키는 프록시입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-990">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-991">원격 개체에 메시지를 보내는 프록시를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-991">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="94156-992">프록시에서 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-992">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-993"><paramref name="type" /> 또는 <paramref name="url" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-993"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="94156-994"><paramref name="type" />은 인터페이스가 아닌 참조로 마샬링되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-994"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-995">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-995">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-996">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-996">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-997">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-997">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="94156-998">연결할 잘 알려진 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-998">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="94156-999">잘 알려진 개체의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-999">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="94156-1000">채널별 데이터 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1000">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="94156-1001">지정된 형식, URL 및 채널 데이터로 표시되는 잘 알려진 개체의 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1001">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="94156-1002">요청된 잘 알려진 개체가 사용하는 엔드포인트를 가리키는 프록시입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1002">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-1003">원격 개체에 메시지를 보내는 프록시를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1003">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="94156-1004">프록시에서 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1004">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="94156-1005">합니다 `state` 매개 변수를 채널에 대 한 정보를 전달 하 고 전달 되는 <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="94156-1005">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94156-1006"><paramref name="type" /> 또는 <paramref name="url" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="94156-1006"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="94156-1007"><paramref name="type" />은 인터페이스가 아닌 참조로 마샬링되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1007"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="94156-1008">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1008">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94156-1009">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1009">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="94156-1010">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1010">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="94156-1011">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1011">Reserved for future use.</span></span> <span data-ttu-id="94156-1012">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1012">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="94156-1013">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1013">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="94156-1014">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1014">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="94156-1015">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1015">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="94156-1016">이름에 해당하는 ID를 받는, 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1016">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="94156-1017">이름 집합을 해당하는 디스패치 식별자 집합에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1017">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-1018">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 되 고 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1018">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="94156-1019">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1019">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="94156-1020">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1020">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="94156-1021">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1021">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="94156-1022">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1022">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="94156-1023">요청된 형식 정보 개체에 대한 포인터를 받는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1023">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="94156-1024">인터페이스의 형식 정보를 가져오는 데 사용할 수 있는 개체의 형식 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1024">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-1025">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 되 고 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1025">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="94156-1026">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1026">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="94156-1027">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1027">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="94156-1028">이 메서드가 반환될 때 개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치에 대한 포인터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1028">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="94156-1029">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1029">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="94156-1030">개체에서 제공하는 형식 정보 인터페이스의 수를 검색합니다(0 또는 1).</span><span class="sxs-lookup"><span data-stu-id="94156-1030">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-1031">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 되 고 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1031">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="94156-1032">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1032">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="94156-1033">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1033">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="94156-1034">멤버를 식별하는 디스패치 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1034">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="94156-1035">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1035">Reserved for future use.</span></span> <span data-ttu-id="94156-1036">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1036">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="94156-1037">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1037">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="94156-1038">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1038">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="94156-1039">인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1039">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="94156-1040">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1040">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="94156-1041">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1041">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="94156-1042">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1042">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="94156-1043">개체에서 노출하는 메서드와 속성에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1043">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94156-1044">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 되 고 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1044">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="94156-1045">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1045">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="94156-1046">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="94156-1046">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>