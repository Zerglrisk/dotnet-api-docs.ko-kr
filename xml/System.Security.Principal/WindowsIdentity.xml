<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="639ee046d46df0fbf33bf00756207afd09bb6214" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56771480" /></Metadata><TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WindowsIdentity = class&#xA;    inherit ClaimsIdentity&#xA;    interface IIdentity&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="45d9c-101">Windows 사용자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-101">Represents a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-102">호출 된 <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> 메서드를를 <xref:System.Security.Principal.WindowsIdentity> 현재 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45d9c-103">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="45d9c-104">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="45d9c-105">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="45d9c-106">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="45d9c-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="45d9c-107">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-108">다음 예제에서는 멤버의 사용을 보여 줍니다. <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="45d9c-109">Windows를 가져오는 방법을 보여 주는 예제에 대 한 계정 관리 되지 않는 Win32 호출을 통해 토큰 `LogonUser` 함수 및 다른 사용자를 가장 토큰을 사용 하 여 참조를 <xref:System.Security.Principal.WindowsImpersonationContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45d9c-110"><see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity userToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="45d9c-111">코드를 실행하고 있는 사용자를 나타내는 계정 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-111">The account token for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="45d9c-112">지정된 Windows 계정 토큰이 나타내는 사용자에 대해 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-113">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Security.Principal.WindowsIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="45d9c-114">속성</span><span class="sxs-lookup"><span data-stu-id="45d9c-114">Property</span></span>|<span data-ttu-id="45d9c-115">초기 값</span><span class="sxs-lookup"><span data-stu-id="45d9c-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-116">나타내는 토큰을 검색할 수 있습니다 `userToken` Win32 API 같은 비관리 코드를 호출 하 여 `LogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="45d9c-117">항상 릴리스 `userToken` Win32 API를 호출 하 여 `CloseHandle` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-117">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="45d9c-118">비관리 코드 호출에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45d9c-119"><paramref name="userToken" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-119"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="45d9c-120">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-120">-or-</span></span> 
 <span data-ttu-id="45d9c-121"><paramref name="userToken" />이 중복되었고 가장에 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-121"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-122">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-122">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-123">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-123">-or-</span></span> 
<span data-ttu-id="45d9c-124">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-124">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-125">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-126">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="45d9c-127"><see cref="T:System.Security.Principal.WindowsIdentity" />의 새 인스턴스를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="45d9c-128">지정된 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 사용하여 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity sUserPrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="45d9c-129">코드를 실행하고 있는 사용자의 UPN입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-129">The UPN for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="45d9c-130">지정된 UPN(사용자 계정 이름)이 나타내는 사용자에 대해 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-131">UPN 형식은 *사용자 이름*@*domainname*.com, 즉, 전자 메일 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="45d9c-132">UPN에 나오는 `sUserPrincipalName` Win32 API를 통해 해당 사용자에 대 한 토큰을 검색 하는 데 사용 됩니다 `LsaLogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="45d9c-133">사용자를 식별 하는 토큰이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="45d9c-134">제공 된 UPN을 사용 하 여 로그온 할 수 없는 예외가 반환 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-135">이 생성자는 Windows Server 2003 또는 이후 도메인에 가입 된 컴퓨터에만 사용 하 여 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="45d9c-136">이전 도메인 형식에 대 한 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="45d9c-137">이 제한은 때문에이 생성자를 사용 합니다 [KERB_S4U_LOGON 구조](https://go.microsoft.com/fwlink/?LinkId=143533), Windows Server 2003에서 도입 된 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="45d9c-138">Windows에서 Windows NT 상태 코드 STATUS_ACCESS_DENIED를 반환했습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="45d9c-139">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-139">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-140">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-140">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-141">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-141">-or-</span></span> 
<span data-ttu-id="45d9c-142">Windows 2003 또는 높은 버전 도메인에 컴퓨터가 연결되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-142">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
<span data-ttu-id="45d9c-143">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-143">-or-</span></span> 
<span data-ttu-id="45d9c-144">컴퓨터가 Windows 2003 이상에서 실행되고 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-144">The computer is not running Windows 2003 or later.</span></span>  
  
<span data-ttu-id="45d9c-145">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-145">-or-</span></span> 
<span data-ttu-id="45d9c-146">사용자는 컴퓨터에 연결된 도메인의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-146">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-147">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-147">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-148">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="45d9c-149">코드를 실행하고 있는 사용자를 나타내는 계정 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-149">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="45d9c-150">정보 전달만을 목적으로 합니다. 사용자를 식별하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-150">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="45d9c-151">지정된 Windows 계정 토큰 및 지정된 인증 형식이 나타내는 사용자에 대한 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-152">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Security.Principal.WindowsIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="45d9c-153">속성</span><span class="sxs-lookup"><span data-stu-id="45d9c-153">Property</span></span>|<span data-ttu-id="45d9c-154">초기 값</span><span class="sxs-lookup"><span data-stu-id="45d9c-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="45d9c-155">값을 `type` 매개 변수는 설정 하는 데 사용 되는 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="45d9c-156">경우 `type` 됩니다 `null`, 보안 시스템 집합 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 에 `Negotiate` Windows Vista 및 이후 버전의 Windows 운영 체제의 `Kerberos` 이전 버전의 Windows 운영 체제에서.</span><span class="sxs-lookup"><span data-stu-id="45d9c-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="45d9c-157">보안 시스템에서이 값을 사용 하지 않습니다. 으로만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-158">나타내는 토큰을 검색할 수 있습니다 `userToken` Win32 API 같은 비관리 코드를 호출 하 여 `LogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="45d9c-159">항상 릴리스 `userToken` Win32 API를 호출 하 여 `CloseHandle` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-159">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="45d9c-160">비관리 코드 호출에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-161">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> 의 새 인스턴스를 만들려면 생성자를 <xref:System.Security.Principal.WindowsIdentity> 지정된 된 Windows 계정 토큰 및 지정 된 인증 형식이 나타내는 사용자에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="45d9c-162">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45d9c-163"><paramref name="userToken" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-163"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="45d9c-164">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-164">-or-</span></span> 
 <span data-ttu-id="45d9c-165"><paramref name="userToken" />이 중복되었고 가장에 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-165"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-166">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-166">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-167">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-167">-or-</span></span> 
<span data-ttu-id="45d9c-168">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-168">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-169">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-169">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-170">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="45d9c-171">사용자에 대한 계정 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-171">The object containing the account information for the user.</span></span></param>
        <param name="context"><span data-ttu-id="45d9c-172">스트림 특징을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-172">An object that indicates the stream characteristics.</span></span></param>
        <summary><span data-ttu-id="45d9c-173"><see cref="T:System.Security.Principal.WindowsIdentity" /> 스트림의 정보가 나타내는 사용자에 대해 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="45d9c-174"><see cref="T:System.Security.Principal.WindowsIdentity" />가 둘 이상의 프로세스에 걸쳐 serialize될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-174">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-175">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-175">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-176">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-176">-or-</span></span> 
<span data-ttu-id="45d9c-177">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-177">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-178">보안 주체 개체를 조작 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-178">for ability to manipulate the principal object.</span></span> <span data-ttu-id="45d9c-179">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (sUserPrincipalName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="45d9c-180">코드를 실행하고 있는 사용자의 UPN입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-180">The UPN for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="45d9c-181">정보 전달만을 목적으로 합니다. 사용자를 식별하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-181">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="45d9c-182">지정된 UPN(사용자 계정 이름) 및 지정된 인증 형식이 나타내는 사용자에 대해 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-182">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-183">값을 `type` 매개 변수는 설정 하는 데 사용 되는 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-183">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="45d9c-184">경우 `type` 됩니다 `null`, 보안 시스템 집합 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 에 `Negotiate` Windows Vista 및 이후 버전의 Windows 운영 체제의 `Kerberos` 이전 버전의 Windows 운영 체제에서.</span><span class="sxs-lookup"><span data-stu-id="45d9c-184">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="45d9c-185">보안 시스템에서이 값을 사용 하지 않습니다. 으로만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-185">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="45d9c-186">UPN에 나오는 `sUserPrincipalName` Win32 API를 통해 해당 사용자에 대 한 토큰을 검색 하는 데 사용 됩니다 `LsaLogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-186">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="45d9c-187">사용자를 식별 하는 토큰이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-187">In turn that token is used to identify the user.</span></span> <span data-ttu-id="45d9c-188">제공 된 UPN을 사용 하 여 로그온 할 수 없는 예외가 반환 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-188">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-189">이 생성자는 Windows Server 2003 또는 이후 도메인에 가입 된 컴퓨터에만 사용 하 여 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-189">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="45d9c-190">이전 도메인 형식에 대 한 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-190">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="45d9c-191">이 제한은 때문에이 생성자를 사용 합니다 [KERB_S4U_LOGON 구조](https://go.microsoft.com/fwlink/?LinkId=143533), Windows Server 2003에서 도입 된 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-191">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="45d9c-192">Windows에서 Windows NT 상태 코드 STATUS_ACCESS_DENIED를 반환했습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-192">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="45d9c-193">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-193">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-194">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-194">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-195">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-195">-or-</span></span> 
<span data-ttu-id="45d9c-196">Windows 2003 또는 높은 버전 도메인에 컴퓨터가 연결되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-196">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
<span data-ttu-id="45d9c-197">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-197">-or-</span></span> 
<span data-ttu-id="45d9c-198">컴퓨터가 Windows 2003 이상에서 실행되고 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-198">The computer is not running Windows 2003 or later.</span></span>  
  
<span data-ttu-id="45d9c-199">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-199">-or-</span></span> 
<span data-ttu-id="45d9c-200">사용자는 컴퓨터에 연결된 도메인의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-200">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-201">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-201">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-202">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-202">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="45d9c-203">코드를 실행하고 있는 사용자를 나타내는 계정 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-203">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="45d9c-204">정보 전달만을 목적으로 합니다. 사용자를 식별하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-204">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="45d9c-205">열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-205">One of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="45d9c-206">지정된 Windows 계정 토큰, 지정된 인증 형식 및 지정된 Windows 계정 유형이 나타내는 사용자에 대해 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-206">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-207">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Security.Principal.WindowsIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-207">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="45d9c-208">속성</span><span class="sxs-lookup"><span data-stu-id="45d9c-208">Property</span></span>|<span data-ttu-id="45d9c-209">초기 값</span><span class="sxs-lookup"><span data-stu-id="45d9c-209">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="45d9c-210">값을 `type` 매개 변수는 설정 하는 데 사용 되는 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-210">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="45d9c-211">경우 `type` 됩니다 `null`, 보안 시스템 집합 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 에 `Negotiate` Windows Vista 및 이후 버전의 Windows 운영 체제의 `Kerberos` 이전 버전의 Windows 운영 체제에서.</span><span class="sxs-lookup"><span data-stu-id="45d9c-211">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="45d9c-212">보안 시스템에서이 값을 사용 하지 않습니다. 으로만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-212">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-213">나타내는 토큰을 검색할 수 있습니다 `userToken` Win32 API 같은 비관리 코드를 호출 하 여 `LogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-213">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="45d9c-214">항상 릴리스 `userToken` Win32 API를 호출 하 여 `CloseHandle` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-214">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="45d9c-215">비관리 코드 호출에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-215">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-216">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> 의 새 인스턴스를 만들려면 생성자를 <xref:System.Security.Principal.WindowsIdentity> 지정된 된 Windows 계정 토큰, 지정 된 인증 형식 및 지정 된 Windows 계정 유형이 나타내는 사용자에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-216">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="45d9c-217">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-217">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45d9c-218"><paramref name="userToken" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-218"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="45d9c-219">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-219">-or-</span></span> 
 <span data-ttu-id="45d9c-220"><paramref name="userToken" />이 중복되었고 가장에 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-220"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-221">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-221">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-222">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-222">-or-</span></span> 
<span data-ttu-id="45d9c-223">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-223">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-224">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-224">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-225">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType * bool -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="45d9c-226">코드를 실행하고 있는 사용자를 나타내는 계정 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-226">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="45d9c-227">정보 전달만을 목적으로 합니다. 사용자를 식별하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-227">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="45d9c-228">열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-228">One of the enumeration values.</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="45d9c-229">인증된 사용자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-229"><see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="45d9c-230">지정된 Windows 계정 토큰, 지정된 인증 형식, 지정된 Windows 계정 유형 및 지정된 인증 상태가 나타내는 사용자에 대해 <see cref="T:System.Security.Principal.WindowsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-230">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-231">값을 `type` 매개 변수는 설정 하는 데 사용 되는 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-231">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="45d9c-232">경우 `type` 됩니다 `null`, 보안 시스템 집합 <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> 에 `Negotiate` Windows Vista 및 이후 버전의 Windows 운영 체제의 `Kerberos` 이전 버전의 Windows 운영 체제에서.</span><span class="sxs-lookup"><span data-stu-id="45d9c-232">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="45d9c-233">보안 시스템에서이 값을 사용 하지 않습니다. 으로만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-233">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="45d9c-234">나타내는 토큰을 검색할 수 있습니다 `userToken` Win32 API 같은 비관리 코드를 호출 하 여 `LogonUser` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-234">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="45d9c-235">항상 릴리스 `userToken` Win32 API를 호출 하 여 `CloseHandle` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-235">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="45d9c-236">비관리 코드 호출에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-236">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-237">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> 의 새 인스턴스를 만들려면 생성자를 <xref:System.Security.Principal.WindowsIdentity> 지정된 된 Windows 계정 토큰, 지정 된 인증 형식, 지정 된 Windows 계정 유형을 나타내는 사용자에 대 한 클래스 및 지정 된 인증 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-237">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="45d9c-238">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-238">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45d9c-239"><paramref name="userToken" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-239"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="45d9c-240">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-240">-or-</span></span> 
 <span data-ttu-id="45d9c-241"><paramref name="userToken" />이 중복되었고 가장에 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-241"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-242">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-242">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-243">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-243">-or-</span></span> 
<span data-ttu-id="45d9c-244">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-244">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-245">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-245">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-246">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Usage="System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-247">이 <see cref="T:System.Security.Principal.WindowsIdentity" /> 인스턴스의 이 <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-247">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span></span></summary>
        <value><span data-ttu-id="45d9c-248"><see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-248">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-249">사용자를 식별하는 데 사용되는 인증 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-249">Gets the type of authentication used to identify the user.</span></span></summary>
        <value><span data-ttu-id="45d9c-250">사용자를 식별하는 데 사용되는 인증 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-250">The type of authentication used to identify the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-251">이 속성은 정보 제공 용 이므로; 보안 시스템에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-251">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="45d9c-252">Windows Vista 및 이후 버전의 Windows 운영 체제에서이 속성의 기본값은 `Negotiate`, 최상의 보안 지원 공급자 (SSP) 고객이 구성한 보안 정책을 기반으로 하는 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-252">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="45d9c-253">이전 버전의 Windows 운영 체제에 대 한 기본 속성 값은 `Kerberos`합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-253">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="45d9c-254">Windows에서 Windows NT 상태 코드 STATUS_ACCESS_DENIED를 반환했습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-254">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="45d9c-255">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-255">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-256">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-256">The caller does not have the correct permissions.</span></span>  
  
<span data-ttu-id="45d9c-257">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-257">-or-</span></span> 
<span data-ttu-id="45d9c-258">Windows 2003 또는 높은 버전 도메인에 컴퓨터가 연결되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-258">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
<span data-ttu-id="45d9c-259">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-259">-or-</span></span> 
<span data-ttu-id="45d9c-260">컴퓨터가 Windows 2003 이상에서 실행되고 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-260">The computer is not running Windows 2003 or later.</span></span>  
  
<span data-ttu-id="45d9c-261">또는</span><span class="sxs-lookup"><span data-stu-id="45d9c-261">-or-</span></span> 
<span data-ttu-id="45d9c-262">사용자는 컴퓨터에 연결된 도메인의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-262">The user is not a member of the domain the computer is attached to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__79))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-263">이 Windows ID가 나타내는 사용자의 모든 클레임을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-263">Gets all claims for the user represented by this Windows identity.</span></span></summary>
        <value><span data-ttu-id="45d9c-264">이 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체에 대한 클레임의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-264">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="windowsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-265">현재 인스턴스의 복사본인 새 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-265">Creates a new  object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="45d9c-266">현재 인스턴스의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-266">A copy of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-267">기본 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 발급자의 이름을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-267">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-268"><see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> 속성 키가 있는 클레임을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-268">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="45d9c-269"><see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> 속성 키가 있는 클레임의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-269">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45d9c-270"><see cref="T:System.Security.Principal.WindowsIdentity" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-270">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-271"><see cref="T:System.Security.Principal.WindowsIdentity" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-271">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-272"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 사용을 마치면 <xref:System.Security.Principal.WindowsIdentity>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-272">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="45d9c-273"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 메서드를 사용하면 <xref:System.Security.Principal.WindowsIdentity>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-273">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="45d9c-274">호출한 후 <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Security.Principal.WindowsIdentity> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Security.Principal.WindowsIdentity> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-274">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="45d9c-275">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-275">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-276"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.Principal.WindowsIdentity>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="45d9c-276">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="45d9c-277">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.Principal.WindowsIdentity> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-277">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="windowsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="45d9c-278">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-278"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="45d9c-279"><see cref="T:System.Security.Principal.WindowsIdentity" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-279">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-280">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="45d9c-280">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="45d9c-281">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-281">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="45d9c-282"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-282"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="45d9c-283">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Security.Principal.WindowsIdentity>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-283">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="45d9c-284">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-284">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45d9c-285">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-285">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="45d9c-286">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-286">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="45d9c-287">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-287">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="45d9c-288">에 대 한 자세한 내용은 <see langword="Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-288">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WindowsIdentity ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="windowsIdentity.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-289">현재 인스턴스에서 보유한 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-289">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="45d9c-290">이 멤버는.NET Framework 버전 2.0 및 이후 버전에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-290">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>


<span data-ttu-id="45d9c-291">애플리케이션 코드는이 메서드를 호출 하지 않습니다. 가비지 수집기에 의해 종료 비활성화 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-291">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="45d9c-292">자세한 내용은 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 및 <xref:System.Object.Finalize>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="45d9c-292">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="45d9c-293">이 메서드는 <xref:System.Object.Finalize>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-293">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberSignature Language="F#" Value="static member GetAnonymous : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetAnonymous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-294">코드에서 익명의 사용자를 나타내는 데 센티널 값으로 사용할 수 있는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-294">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span></span> <span data-ttu-id="45d9c-295">속성 값은 Windows 운영 체제에서 사용하는 익명의 기본 ID를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-295">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span></span></summary>
        <returns><span data-ttu-id="45d9c-296">익명 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-296">An object that represents an anonymous user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-297">이 속성은 빈 반환 <xref:System.Security.Principal.WindowsIdentity> 익명으로 작업을 처리할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-297">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="45d9c-298">속성 값을 Windows 익명 사용자에 해당 하지 않는 및 가장에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-298">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="45d9c-299">이 속성에서 반환한 id는 정적; 참고 또한 호출할 때마다 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 다른 익명 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-299">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="45d9c-300">사용할 수는 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> 속성에서 반환 된 값을 검색할 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-300">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="45d9c-301">그러나 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> Windows 익명 id와이 메서드에서 반환 하는 익명 id를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-301">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="45d9c-302">두 번째 id를 사용 하려면 캐시를 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 반환 값에 의존 하지 않고는 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="45d9c-302">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-303">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 반환할 메서드는 <xref:System.Security.Principal.WindowsIdentity> 익명 Windows 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-303">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="45d9c-304">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-304">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45d9c-305">현재 Windows 사용자를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-305">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberSignature Language="F#" Value="static member GetCurrent : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-306">현재 Windows 사용자를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-306">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
        <returns><span data-ttu-id="45d9c-307">현재 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-307">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-308">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> 반환할 메서드는 <xref:System.Security.Principal.WindowsIdentity> 현재 Windows 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-308">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="45d9c-309">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-309">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-310">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-310">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-311">보안 주체 개체를 조작 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-311">for ability to manipulate the principal object.</span></span> <span data-ttu-id="45d9c-312">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-312">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : bool -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent ifImpersonating" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating"><span data-ttu-id="45d9c-313">스레드가 현재 가장하고 있는 경우에만 <see cref="T:System.Security.Principal.WindowsIdentity" />를 반환하려면 <see langword="true" />이고, 스레드가 가장하고 있는 경우 스레드의 <see cref="T:System.Security.Principal.WindowsIdentity" />를 반환하거나 스레드가 현재 가장하고 있지 않은 경우 프로세스의 <see cref="T:System.Security.Principal.WindowsIdentity" />를 반환하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-313"><see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span></span></param>
        <summary><span data-ttu-id="45d9c-314"><paramref name="ifImpersonating" /> 매개 변수의 값에 따라 스레드나 프로세스에 대한 Windows ID를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-314">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="45d9c-315">Windows 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-315">An object that represents a Windows user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-316">하는 경우 `ifImpersonating` 됩니다 `true` 및 스레드가 가장 하 고 있지, 반환 된 <xref:System.Security.Principal.WindowsIdentity> 개체에 값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-316">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="45d9c-317">하는 경우 `ifImpersonating` 됩니다 `false` 스레드가 가장 하 고, <xref:System.Security.Principal.WindowsIdentity> 스레드가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-317">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="45d9c-318">하는 경우 `ifImpersonating` 됩니다 `false` 스레드가 가장 하 고 있지 및, <xref:System.Security.Principal.WindowsIdentity> 프로세스가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-318">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-319">보안 주체 개체를 조작 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-319">for ability to manipulate the principal object.</span></span> <span data-ttu-id="45d9c-320">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-320">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Security.Principal.TokenAccessLevels -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent desiredAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="desiredAccess"><span data-ttu-id="45d9c-321">열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-321">A bitwise combination of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="45d9c-322">지정한 희망 토큰 액세스 수준을 사용하여 현재 Windows 사용자를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-322">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span></span></summary>
        <returns><span data-ttu-id="45d9c-323">현재 사용자를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-323">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-324">`desiredAccess` 매개 변수는 요청 된 유형의 액세스 토큰에 대 한 액세스를 식별 하는 액세스 마스크를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-324">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="45d9c-325">이러한 요청 된 액세스 형식은 토큰의 임의 액세스 제어 목록 (DACL) 어떤 종류의 액세스 권한이 부여 되거나 거부 된 결정할과 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-325">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-326">보안 주체 개체를 조작 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-326">for ability to manipulate the principal object.</span></span> <span data-ttu-id="45d9c-327">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-327">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Security.Principal.IdentityReferenceCollection" Usage="System.Security.Principal.WindowsIdentity.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-328">현재 Windows 사용자가 속해 있는 그룹을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-328">Gets the groups the current Windows user belongs to.</span></span></summary>
        <value><span data-ttu-id="45d9c-329">현재 Windows 사용자가 속해 있는 그룹을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-329">An object representing the groups the current Windows user belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-330">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsIdentity.Groups%2A> 속성을 현재 사용자가 속한 그룹에 대 한 id 참조를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-330">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="45d9c-331">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-331">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45d9c-332">코드에서 다른 Windows 사용자를 가장할 수 있도록 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-332">Allows code to impersonate a different Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberSignature Language="F#" Value="abstract member Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext&#xA;override this.Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="windowsIdentity.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45d9c-333"><see cref="T:System.Security.Principal.WindowsIdentity" /> 개체가 나타내는 사용자를 가장합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-333">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <returns><span data-ttu-id="45d9c-334">가장하기 전의 Windows 사용자를 나타내는 개체입니다. 이 개체를 사용하면 원래 사용자의 컨텍스트로 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-334">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-335">Windows NT 플랫폼에서 현재 사용자 가장을 허용 하도록 충분 한 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-335">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-336">다음 예제에서는 관리 되지 않는 Win32를 호출 하 여 Windows 계정 토큰을 가져와야 하는 방법에 설명 `LogonUser` 함수 및 다른 사용자를 가장 하 고 원래 id로 되돌릴 다음 해당 토큰을 사용 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-336">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="45d9c-337">익명 ID로 가장하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-337">An anonymous identity attempted to perform an impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-338">Win32 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-338">A Win32 error occurred.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="45d9c-339">없기 때문에 Microsoft Windows 98 및 Windows Millennium Edition (Windows Me) 플랫폼 사용자 토큰을 가장 해당 플랫폼에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-339">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="45d9c-340">사용한 후 <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />를 호출 해야 합니다 <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> 가장을 종료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-340">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="System.Security.Principal.WindowsIdentity.Impersonate userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="45d9c-341">Windows 계정 토큰 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-341">The handle of a Windows account token.</span></span> <span data-ttu-id="45d9c-342">일반적으로 이 토큰은 Win32 API <see langword="LogonUser" /> 함수 같은 비관리 코드를 호출하여 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-342">This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <see langword="LogonUser" /> function.</span></span></param>
        <summary><span data-ttu-id="45d9c-343">지정된 사용자 토큰이 나타내는 사용자를 가장합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-343">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="45d9c-344">가장하기 전의 Windows 사용자를 나타내는 개체입니다. 이 개체를 사용하면 원래 사용자의 컨텍스트로 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-344">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-345">Windows NT 플랫폼에서 현재 사용자 가장을 허용 하도록 충분 한 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-345">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-346">호출을 <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> 메서드를 `userToken` 의 값 <xref:System.IntPtr.Zero> Win32를 호출 하는 것과 같습니다 `RevertToSelf` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-346">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="45d9c-347">다른 사용자를 가장할 현재는 원래 사용자 제어로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-347">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="45d9c-348">비관리 코드에 대 한 호출에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-348">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-349">다음 예제에서는 관리 되지 않는 Win32를 호출 하 여 Windows 계정 토큰을 가져와야 하는 방법에 설명 `LogonUser` 함수 및 다른 사용자를 가장 하 고 원래 id로 되돌릴 다음 해당 토큰을 사용 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-349">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="45d9c-350">Windows에서 Windows NT 상태 코드 STATUS_ACCESS_DENIED를 반환했습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-350">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="45d9c-351">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="45d9c-351">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="45d9c-352">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-352">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-353">보안 주체 개체를 조작 하 여 비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-353">for the ability to manipulate the principal object and access unmanaged code.</span></span> <span data-ttu-id="45d9c-354">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> 및 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-354">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="45d9c-355">없기 때문에 Microsoft Windows 98 및 Windows Millennium Edition (Windows Me) 플랫폼 사용자 토큰을 가장 해당 플랫폼에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-355">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="45d9c-356">사용한 후 <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />를 호출 해야 합니다 <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> 가장을 종료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-356">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-357">사용자의 가장 수준을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-357">Gets the impersonation level for the user.</span></span></summary>
        <value><span data-ttu-id="45d9c-358">가장 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-358">One of the enumeration values that specifies the impersonation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-359">WMI에 연결하는 데 사용할 가장 수준을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-359">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-360">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> 속성을 현재 사용자의 가장 수준을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-360">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="45d9c-361">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-361">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-362">사용자 계정이 시스템에서 익명 계정으로 식별되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-362">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span></span></summary>
        <value><span data-ttu-id="45d9c-363">사용자 계정이 익명 계정이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-363"><see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-364">합니다 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> 속성에서 반환 되는 익명 id 및 Windows 익명 id를 모두 검색 합니다 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="45d9c-364">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="45d9c-365">익명 계정에 일반적으로 발생 에서만 ASP.NET 기반 애플리케이션 내에서 익명 액세스는 인터넷 정보 서비스 (IIS)에서 허용 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="45d9c-365">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-366">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> 사용자 계정이 시스템에서 익명 계정으로 식별 되는지 여부를 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-366">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="45d9c-367">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-367">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-368">Windows에서 사용자를 인증했는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-368">Gets a value indicating whether the user has been authenticated by Windows.</span></span></summary>
        <value><span data-ttu-id="45d9c-369">사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-369"><see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGuest : bool" Usage="System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-370">사용자 계정이 시스템에서 <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> 계정으로 식별되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-370">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span></span></summary>
        <value><span data-ttu-id="45d9c-371">사용자 계정이 <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> 계정이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-371"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-372">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> 사용자 계정으로 식별 되는지를 나타내는 값을 반환 하도록 속성을 <xref:System.Security.Principal.WindowsAccountType.Guest> 시스템 계정입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-372">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="45d9c-373">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-373">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystem : bool" Usage="System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-374">사용자 계정이 시스템에서 <see cref="F:System.Security.Principal.WindowsAccountType.System" /> 계정으로 식별되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-374">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span></span></summary>
        <value><span data-ttu-id="45d9c-375">사용자 계정이 <see cref="F:System.Security.Principal.WindowsAccountType.System" /> 계정이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-375"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-376">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> 사용자 계정으로 식별 되는지를 나타내는 값을 반환 하도록 속성을 <xref:System.Security.Principal.WindowsAccountType.System> 시스템 계정입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-376">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="45d9c-377">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-377">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Principal.WindowsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-378">사용자의 Windows 로그온 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-378">Gets the user's Windows logon name.</span></span></summary>
        <value><span data-ttu-id="45d9c-379">코드를 실행하고 있는 사용자의 Windows 로그온 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-379">The Windows logon name of the user on whose behalf the code is being run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-380">로그온 이름은 도메인 \ 사용자 이름 형식에서입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-380">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-381">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.Name%2A> 속성을 사용자의 Windows 로그온 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-381">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="45d9c-382">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-382">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-383">토큰 소유자의 SID(보안 식별자)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-383">Gets the security identifier (SID) for the token owner.</span></span></summary>
        <value><span data-ttu-id="45d9c-384">토큰 소유자에 대한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-384">An object for the token owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-385">SID는 사용자 또는 그룹에 모든 Windows NT 구현에 고유 하 게 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-385">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="45d9c-386">반환 된 SID를 SID 새로 만든된 개체에 적용 될 기본 소유자를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-386">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-387">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsIdentity.Owner%2A> 토큰 소유자에 대 한 보안 식별자를 표시 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-387">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="45d9c-388">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스</span><span class="sxs-lookup"><span data-stu-id="45d9c-388">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Action -&gt; unit" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="action" Type="System.Action" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle"><span data-ttu-id="45d9c-389">가장 Windows ID의 SafeAccessTokenHandle입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-389">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="action"><span data-ttu-id="45d9c-390">실행할 System.Action입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-390">The System.Action to run.</span></span></param>
        <summary><span data-ttu-id="45d9c-391">가장된 Windows ID로 지정된 작업을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-391">Runs the specified action as the impersonated Windows identity.</span></span> <span data-ttu-id="45d9c-392">가장된 메서드 호출을 사용하여 <see cref="T:System.Security.Principal.WindowsImpersonationContext" />에서 함수를 실행하지 않고 <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />를 사용하여 매개 변수로 직접 함수를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-392">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-393">다음 예제에서는 사용 된 <xref:System.Security.Principal.WindowsIdentity> 사용자를 가장 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-393">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="45d9c-394">이 샘플 콘솔 화면에서 암호를 입력 하도록 사용자에 게 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-394">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="45d9c-395">콘솔 창 입력 마스크를 고유 하 게 지원 하지 않으므로 암호 화면에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-395">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Func&lt;'T&gt; -&gt; 'T" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="45d9c-396">함수에서 사용되고 반환되는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-396">The type of object used by and returned by the function.</span></span></typeparam>
        <param name="safeAccessTokenHandle"><span data-ttu-id="45d9c-397">가장 Windows ID의 SafeAccessTokenHandle입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-397">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="func"><span data-ttu-id="45d9c-398">실행할 System.Func입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-398">The System.Func to run.</span></span></param>
        <summary><span data-ttu-id="45d9c-399">가장된 Windows ID로 지정된 함수를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-399">Runs the specified function as the impersonated Windows identity.</span></span> <span data-ttu-id="45d9c-400">가장된 메서드 호출을 사용하여 <see cref="T:System.Security.Principal.WindowsImpersonationContext" />에서 함수를 실행하지 않고 <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />를 사용하여 매개 변수로 직접 함수를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-400">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <returns><span data-ttu-id="45d9c-401">함수의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-401">The result of the function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45d9c-402">다음 예제에서는 사용 된 <xref:System.Security.Principal.WindowsIdentity> 사용자를 가장 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-402">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="45d9c-403">이 샘플 콘솔 화면에서 암호를 입력 하도록 사용자에 게 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-403">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="45d9c-404">콘솔 창 입력 마스크를 고유 하 게 지원 하지 않으므로 암호 화면에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-404">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="45d9c-405">deserialization 이벤트의 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-405">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="45d9c-406"><see cref="T:System.Runtime.Serialization.ISerializable" /> 인터페이스를 구현하고 deserialization이 완료되면 deserialization 이벤트에 의해 콜백됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-406">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="45d9c-407"><see cref="T:System.Collections.Hashtable" />을 직렬화하는 데 필요한 정보가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-407">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="45d9c-408"><see cref="T:System.Collections.Hashtable" />과 관련된 직렬화된 스트림의 원본과 대상이 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-408">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="45d9c-409">이 실행 컨텍스트의 인스턴스를 다시 만드는 데 필요한 논리 컨텍스트 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-409">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-410">이 메서드는 설정 된 <xref:System.Runtime.Serialization.SerializationInfo> 논리를 사용 하 여 컨텍스트 정보를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-410">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="45d9c-411">Deserialization 도중 실행 컨텍스트 개체에서 다시 구성 됩니다는 <xref:System.Runtime.Serialization.SerializationInfo> 스트림을 통해 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-411">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="45d9c-412">자세한 내용은 <xref:System.Runtime.Serialization.SerializationInfo>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="45d9c-412">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="45d9c-413">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-413">requires full trust for the immediate caller.</span></span> <span data-ttu-id="45d9c-414">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-414">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : nativeint" Usage="System.Security.Principal.WindowsIdentity.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-415">사용자의 Windows 계정 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-415">Gets the Windows account token for the user.</span></span></summary>
        <value><span data-ttu-id="45d9c-416">현재 실행 스레드와 관련된 액세스 토큰 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-416">The handle of the access token associated with the current execution thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-417">수행할 명시적으로 릴리스 하 여 반환 되는 계정 토큰을 <xref:System.Security.Principal.WindowsIdentity.Token%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-417">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="45d9c-418">토큰에 의해 해제 되는 <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 메서드를 코드에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-418">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="45d9c-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 가비지 수집기에 의해 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-420">반환 되는 계정 토큰을를 <xref:System.Security.Principal.WindowsIdentity.Token%2A> 속성을 만드는 데 사용 되는 Windows 토큰의 중복을 <xref:System.Security.Principal.WindowsIdentity> 개체 및.NET Framework에서 자동으로 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-420">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="45d9c-421">계정 토큰을 다릅니다 (합니다 `userToken` 생성자에 대 한 매개 변수)를 만드는 데 사용 되는 <xref:System.Security.Principal.WindowsIdentity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-421">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="45d9c-422">`userToken` 호출 하 여 만든 Windows 계정 토큰 `LogonUser` 메모리 누수를 방지 하려면 닫혀 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-422">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45d9c-423">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> 사용자에 대 한 Windows 계정 토큰을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-423">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="45d9c-424">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Principal.WindowsIdentity> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-424">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="45d9c-425">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-425">for the ability to access unmanaged code.</span></span> <span data-ttu-id="45d9c-426">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="45d9c-426">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-427">사용자의 SID(보안 식별자)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-427">Gets the security identifier (SID) for the user.</span></span></summary>
        <value><span data-ttu-id="45d9c-428">사용자에 대한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-428">An object for the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45d9c-429">SID는 사용자 또는 그룹에 모든 Windows NT 구현에 고유 하 게 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-429">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45d9c-430">합니다 <xref:System.Security.Principal.WindowsIdentity> 에서 반환 된 개체는 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 메서드는 익명 Windows 사용자와 동일 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-430">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="45d9c-431">이 속성을 가져옵니다 `null` 나타내는 익명 사용자에 대 한는 <xref:System.Security.Principal.WindowsIdentity> 에서 반환 된 개체는 <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> 메서드를 나타내는 익명 Windows 사용자의 SID를 가져오지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-431">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45d9c-432"><see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> 속성 키가 있는 클레임을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-432">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="45d9c-433"><see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> 속성 키가 있는 클레임의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="45d9c-433">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>