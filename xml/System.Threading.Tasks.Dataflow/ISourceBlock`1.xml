<Type Name="ISourceBlock&lt;TOutput&gt;" FullName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec203c0549a12afc6ac50891f4726e9f4784f080" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56379529" /></Metadata><TypeSignature Language="C#" Value="public interface ISourceBlock&lt;out TOutput&gt; : System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISourceBlock`1&lt;+ TOutput&gt; implements class System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISourceBlock(Of Out TOutput)&#xA;Implements IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOutput&gt;&#xA;public interface class ISourceBlock : System::Threading::Tasks::Dataflow::IDataflowBlock" />
  <TypeSignature Language="F#" Value="type ISourceBlock&lt;'Output&gt; = interface&#xA;    interface IDataflowBlock" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOutput"><span data-ttu-id="7f9f5-101">제공한 데이터의 형식을 지정 합니다 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-101">Specifies the type of data supplied by the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="7f9f5-102">데이터의 소스인 데이터 흐름 블록을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-102">Represents a dataflow block that is a source of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConsumeMessage">
      <MemberSignature Language="C#" Value="public TOutput ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TOutput ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput), ByRef messageConsumed As Boolean) As TOutput" />
      <MemberSignature Language="F#" Value="abstract member ConsumeMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; *  -&gt; 'Output" Usage="iSourceBlock.ConsumeMessage (messageHeader, target, messageConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="7f9f5-103">사용 중인 메시지의 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-103">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span></span></param>
        <param name="target"><span data-ttu-id="7f9f5-104">메시지를 사용하는 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-104">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span></span></param>
        <param name="messageConsumed"><span data-ttu-id="7f9f5-105">메시지를 성공적으로 사용했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-105"><see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7f9f5-106">이 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />에서 이전에 제공한 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />를 받아 사용하기 위해 연결된 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-106">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="7f9f5-107">사용한 메시지의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-107">The value of the consumed message.</span></span> <span data-ttu-id="7f9f5-108">이전에 예약되어 <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />에 <paramref name="messageHeader" />로 전달된 다른 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> 인스턴스에 해당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-108">This may correspond to a different  <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span></span> <span data-ttu-id="7f9f5-109">사용 중인 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />은  <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />를 통해 <paramref name="messageValue" />로 전달되는 값 대신 반환되는 값을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-109">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span></span>  
  
<span data-ttu-id="7f9f5-110">요청한 메시지를 사용할 수 없으면 반환 값은 null이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-110">If the message requested is not available, the return value will be null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9f5-111">만 <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> 이 연결 된 인스턴스 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> 인스턴스를 사용할 수 있습니다 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>를 사용에 사용 해야 합니다 <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> 인스턴스가이 원본을 대상으로 이전에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-111">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f9f5-112">messageHeader가 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-112">The messageHeader is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f9f5-113">대상은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-113">The target is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of Out TOutput), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="iSourceBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7f9f5-114">이 소스를 연결할 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-114">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span></span></param>
        <param name="linkOptions"><span data-ttu-id="7f9f5-115">링크를 구성하는 <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-115">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span></span></param>
        <summary><span data-ttu-id="7f9f5-116"><see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />을 지정된 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-116">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="7f9f5-117">Dispose 호출 시 대상에서 소스의 연결을 해제할 IDisposable입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-117">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f9f5-118"><paramref name="target" />이 null(Visual Basic에서는 없음)이거나 <paramref name="linkOptions" />이 null(Visual Basic에서는 없음)입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-118"><paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseReservation">
      <MemberSignature Language="C#" Value="public void ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseReservation : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; unit" Usage="iSourceBlock.ReleaseReservation (messageHeader, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="7f9f5-119">해제하고 있는 예약된 메시지의 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-119">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span></span></param>
        <param name="target"><span data-ttu-id="7f9f5-120">이전에 예약한 메시지를 해제하고 있는 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-120">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span></span></param>
        <summary><span data-ttu-id="7f9f5-121">이 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />에 의해 이전에 예약한 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />를 해제하기 위해 연결된 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-121">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9f5-122">만 <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> 인스턴스는이 연결할 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> 인스턴스를 사용할 수 있습니다 `ReleaseReservation`, 릴리스만 사용 해야 합니다 <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> 대상에서 이전에 성공적으로 예약 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-122">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use `ReleaseReservation`, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f9f5-123"><paramref name="messageHeader" />이 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7f9f5-123">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f9f5-124"><paramref name="target" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7f9f5-124">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f9f5-125"><paramref name="target" />에 예약된 메시지가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-125">The <paramref name="target" /> did not have the message reserved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveMessage">
      <MemberSignature Language="C#" Value="public bool ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="abstract member ReserveMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; bool" Usage="iSourceBlock.ReserveMessage (messageHeader, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="7f9f5-126">받고 있는 메시지의 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-126">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span></span></param>
        <param name="target"><span data-ttu-id="7f9f5-127">메시지를 예약하는 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-127">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span></span></param>
        <summary><span data-ttu-id="7f9f5-128">이 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />에 의해 이전에 제공한 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />를 예약하기 위해 연결된 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-128">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="7f9f5-129">메시지를 성공적으로 예약했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-129"><see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9f5-130">만 <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> 이 연결 된 인스턴스 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> 인스턴스를 사용할 수 있습니다 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, 예약에 사용 해야 합니다 <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> 인스턴스가이 원본을 대상으로 이전에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-130">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="7f9f5-131">하는 경우 `true` 반환 되는 <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> 호출 이후에 해야 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> 또는 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> 이 메시지에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-131">If `true` is returned, the  <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either  <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="7f9f5-132">이렇게 하지 않으면이 또는 다른 대상에 메시지를 더 이상 전달할 수 없는 소스에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-132">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="7f9f5-133"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> 대상 유지 하는 동안 내부 잠금을 하지 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-133"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="7f9f5-134">이렇게 위반 잠금 계층 구조의 데이터 흐름 네트워크에서 교착 상태를 방지 하기 위해 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f9f5-134">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f9f5-135"><paramref name="messageHeader" />이 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7f9f5-135">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f9f5-136"><paramref name="target" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7f9f5-136">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>