<Type Name="XamlInternalException" FullName="System.Xaml.XamlInternalException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31a5b50c108a5d83d5d861f73baa68fc671e9077" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56397031" /></Metadata><TypeSignature Language="C#" Value="public class XamlInternalException : System.Xaml.XamlException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlInternalException extends System.Xaml.XamlException" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlInternalException" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlInternalException&#xA;Inherits XamlException" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlInternalException : System::Xaml::XamlException" />
  <TypeSignature Language="F#" Value="type XamlInternalException = class&#xA;    inherit XamlException" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2e2b-101">XAML 읽기 및 XAML 쓰기 중에 발생하는 내부 불일치에 대해 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-101">The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2e2b-102">이 예외는 대개 XAML 판독기 또는 XAML 작성기 시스템의 일부 측면은 코드에 의해 확장 된.NET Framework XAML 서비스 시스템 코드 전달 된 불일치 또는 구현 문제가 발생 한 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-102">This exception is usually thrown only when some aspect of the XAML reader or XAML writer system was extended by your code, and inconsistencies or implementation problems occurred that were passed on to the .NET Framework XAML Services system code.</span></span> <span data-ttu-id="e2e2b-103">XAML을 구문 분석 된 XAML에서 오류가 발생 등의 제 3 자에서 발생할 수 있는 예외를 throw 하면 안됩니다 <xref:System.Xaml.XamlInternalException>, 해야 대신와 같은 다른 예외를 throw <xref:System.Xaml.XamlParseException> 또는 <xref:System.Xaml.XamlObjectWriterException>합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-103">Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw <xref:System.Xaml.XamlInternalException>, and should instead throw other exceptions such as <xref:System.Xaml.XamlParseException> or <xref:System.Xaml.XamlObjectWriterException>.</span></span>  
  
 <span data-ttu-id="e2e2b-104">.NET Framework XAML 서비스를 확장 하는 코드를 작성 하는 경우 특히 XAML 판독기 또는 XAML 작성기 구현에 대 한 코드를 작성 하는 경우 유지 관리 해야이 구분 <xref:System.Xaml.XamlInternalException> 및 다른 XAML 관련 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-104">If you are writing code that extends .NET Framework XAML Services, in particular, if you are writing code for a XAML reader or XAML writer implementation, you should maintain this distinction between <xref:System.Xaml.XamlInternalException> and the other XAML-related exceptions.</span></span> <span data-ttu-id="e2e2b-105">코드는 throw <xref:System.Xaml.XamlInternalException> 경우 추가 확장 클래스의 호출 가능 코드를 정의 하는 몇 가지 디자인 원칙 또는 구현 패턴을 위반 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-105">Your code should only throw <xref:System.Xaml.XamlInternalException> in cases where further extension of your class violates some design principle or implementation pattern that your callable code defines.</span></span> <span data-ttu-id="e2e2b-106">코드는 예외는 경우에 XAML 판독기 또는 XAML 작성기 구현 확장 없이 사용 되 면 타사 XAML, 타사 XAML 스키마 컨텍스트 및 등을 로드 하는 대 한 다른 XAML 관련 예외를 throw 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-106">Your code should throw other XAML-specific exceptions for exception cases where your XAML reader or XAML writer implementation is used without extension and is used to load third-party XAML, third-party XAML schema context, and so on.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlParseException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2e2b-107"><see cref="T:System.Xaml.XamlInternalException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlInternalException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlInternalException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlInternalException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlInternalException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2e2b-108">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.Xaml.XamlInternalException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlInternalException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlInternalException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlInternalException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlInternalException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlInternalException : string -&gt; System.Xaml.XamlInternalException" Usage="new System.Xaml.XamlInternalException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e2e2b-109">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-109">The message that describes the exception.</span></span></param>
        <summary><span data-ttu-id="e2e2b-110"><see cref="T:System.Xaml.XamlInternalException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlInternalException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlInternalException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlInternalException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlInternalException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Xaml.XamlInternalException" Usage="new System.Xaml.XamlInternalException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="e2e2b-111">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-111">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="e2e2b-112">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-112">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="e2e2b-113">serialize된 데이터를 사용하여 <see cref="T:System.Xaml.XamlInternalException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlInternalException" /> class with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlInternalException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlInternalException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlInternalException : string * Exception -&gt; System.Xaml.XamlInternalException" Usage="new System.Xaml.XamlInternalException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e2e2b-114">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-114">The message that describes the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="e2e2b-115">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-115">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="e2e2b-116"><paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-116">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="e2e2b-117">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Xaml.XamlInternalException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2e2b-117">Initializes a new instance of the <see cref="T:System.Xaml.XamlInternalException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>