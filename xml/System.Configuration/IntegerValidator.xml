<Type Name="IntegerValidator" FullName="System.Configuration.IntegerValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cd7be28f6817a2a70b3d997d4d864c4b8d7fa49" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56764837" /></Metadata><TypeSignature Language="C#" Value="public class IntegerValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegerValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegerValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type IntegerValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="703cc-101"><see cref="T:System.Int32" /> 값의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-101">Provides validation of an <see cref="T:System.Int32" /> value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="703cc-102"><xref:System.Configuration.IntegerValidator> 클래스 정수 특정 조건을 충족 하는지 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-102">The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria.</span></span> <span data-ttu-id="703cc-103">유효성 검사에 대 한 조건을 설정의 인스턴스는 <xref:System.Configuration.IntegerValidator> 클래스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-103">The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="703cc-104"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 두 개의 매개 변수를 사용 하 여 생성자 따르는지 확인할 정수 최소값 및 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-104">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.</span></span> <span data-ttu-id="703cc-105"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 의 최소값 및 최대값을 확인 하는 세 개의 매개 변수를 사용 하 여 생성자 <xref:System.Int32> 유효성을 검사 하려면 해당 값이 지정된 된 범위 내에서 뿐만 아니라 값입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-105">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range.</span></span> <span data-ttu-id="703cc-106"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 4 개의 매개 변수를 사용 하 여 생성자를 이전 세 개의 매개 변수를 확인 확인 여부는 <xref:System.Int32> 값은 특정 해상도 같습니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-106">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.</span></span>  
  
 <span data-ttu-id="703cc-107"><xref:System.Configuration.IntegerValidator.CanValidate%2A> 메서드 유효성을 검사할 개체 형식에 필요한 형식과 일치 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-107">The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="703cc-108">유효성 검사 중인 개체의 매개 변수로 전달 되는 <xref:System.Configuration.IntegerValidator.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="703cc-108">The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="703cc-109">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Configuration.IntegerValidator> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-109">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]
 [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="703cc-110"><see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-110">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="703cc-111">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-111">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="703cc-112">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-112">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <summary><span data-ttu-id="703cc-113"><see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-113">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="703cc-114">이 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 생성자 따르는지 확인할 정수는 최소 및 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-114">This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="703cc-115">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-115">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="703cc-116">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-116">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="703cc-117">유효성 검사 범위를 제외로 지정하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-117"><see langword="true" /> to specify that the validation range is exclusive.</span></span> <span data-ttu-id="703cc-118">포함은 유효성을 검사할 값이 지정된 범위 내에 있어야 함을 나타냅니다. 제외는 값이 최소값보다 작거나 최대값보다 커야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-118">Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</span></span></param>
        <summary><span data-ttu-id="703cc-119"><see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-119">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="703cc-120">인스턴스를 만들 때 합니다 <xref:System.Configuration.IntegerValidator> 이 클래스 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 생성자의 최소값 및 최대값을 확인 <xref:System.Int32> 유효성 검사 범위가 독점적인 지 여부도 뿐만 아니라 값입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-120">When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive.</span></span> <span data-ttu-id="703cc-121">경우는 `rangeIsExclusive` 매개 변수는 설정 `true`, <xref:System.Int32> 값 간의 아니어야 합니다 `minValue` 및 `maxValue` 매개 변수 값.</span><span class="sxs-lookup"><span data-stu-id="703cc-121">When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="703cc-122">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-122">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="703cc-123">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Configuration.IntegerValidator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-123">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]
 [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean, resolution As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="703cc-124">정수 값의 최소 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-124">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="703cc-125">정수 값의 최대 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-125">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="703cc-126">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-126">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</span></span></param>
        <param name="resolution"><span data-ttu-id="703cc-127">일치되어야 하는 값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-127">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</span></span></param>
        <summary><span data-ttu-id="703cc-128"><see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-128">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="703cc-129"><xref:System.Int32> 유효성을 검사할 값이 동일 해야 합니다 `resolution` 값 유효성 검사를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-129">The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="703cc-130"><paramref name="resolution" />가 <see langword="0" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="703cc-130"><paramref name="resolution" /> is less than <see langword="0" />.</span></span>  
  
<span data-ttu-id="703cc-131">또는</span><span class="sxs-lookup"><span data-stu-id="703cc-131">-or-</span></span> 
 <span data-ttu-id="703cc-132"><paramref name="minValue" />가 <paramref name="maxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="703cc-132"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="integerValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="703cc-133">개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-133">The type of the object.</span></span></param>
        <summary><span data-ttu-id="703cc-134">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-134">Determines whether the type of the object can be validated.</span></span></summary>
        <returns><span data-ttu-id="703cc-135"><paramref name="type" /> 매개 변수가 <see cref="T:System.Int32" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-135"><see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="703cc-136">다음 코드 예제에서는 <xref:System.Configuration.IntegerValidator.CanValidate%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-136">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="703cc-137">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Configuration.IntegerValidator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-137">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]
 [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="integerValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="703cc-138">유효성을 검사할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-138">The value to be validated.</span></span></param>
        <summary><span data-ttu-id="703cc-139">개체의 값이 유효한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-139">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="703cc-140"><xref:System.Configuration.IntegerValidator> 정수 개체의 유효성을 검사 하는 데 필요한 규칙을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-140">An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object.</span></span> <span data-ttu-id="703cc-141">규칙은 인스턴스가 설정 된는 <xref:System.Configuration.IntegerValidator> 클래스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-141">The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="703cc-142">유효성을 검사할 정수 개체의 매개 변수로 전달 되는 <xref:System.Configuration.IntegerValidator.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="703cc-142">The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="703cc-143">다음 코드 예제에서는 <xref:System.Configuration.IntegerValidator.Validate%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-143">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span> <span data-ttu-id="703cc-144">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Configuration.IntegerValidator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="703cc-144">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]
 [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>